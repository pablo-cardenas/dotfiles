" if vim-plug is not installed
if empty(glob("~/.vim/autoload/plug.vim"))
    silent !curl -fLso ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall
end

" Init vim-plug plugins
call plug#begin('~/.vim/plugged/')

" General purpose plugins
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
"Plug 'ctrlpvim/ctrlp.vim'
"Plug 'ap/vim-buftabline'
Plug 'mattn/emmet-vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'scrooloose/nerdtree'
Plug 'ntpeters/vim-better-whitespace'
Plug 'ron89/thesaurus_query.vim'
"Plug 'Valloric/YouCompleteMe'
"Plug 'rdnetto/YCM-Generator'

" Language support
Plug 'wlangstroth/vim-racket'
Plug 'tfnico/vim-gradle'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-endwise'
Plug 'alvan/vim-closetag'
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'
Plug 'lervag/vimtex'
Plug 'nvie/vim-flake8'

" Colorschemes
Plug 'morhetz/gruvbox'
call plug#end()

" Stop acting like classic vi
set nocompatible               " disable vi compatibility mode
set history=1000               " increase history size
set noswapfile                 " don't create swapfiles
set nobackup                   " don't backup, use git!

" Modify indenting settings
set autoindent                 " autoindent always ON.
set expandtab                  " expand tabs to spaces
set shiftwidth=4               " spaces for autoindenting
set softtabstop=4              " remove a full pseudo-TAB when i press <BS>
set tabstop=8                  " spaces for <TAB>

" Modify some other settings about files
set encoding=utf-8             " always use unicode
set backspace=indent,eol,start " backspace always works on insert mode
set hidden
set colorcolumn=80

" Some programming languages work better when only 2 spaces padding is used.
autocmd FileType html,css,sass,scss,javascript setlocal sw=2 sts=2
autocmd FileType json setlocal sw=2 sts=2
autocmd FileType ruby,eruby setlocal sw=2 sts=2
autocmd FileType yaml setlocal sw=2 sts=2
autocmd FileType tex,plaintex setlocal sw=2 sts=2 nocuc cc=66,84,102,126,150

" Required for alvan/vim-closetag
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.html.erb,*.xml.erb,*.xml"

" Are we supporting colors?
if &t_Co > 2 || has("gui_running")
   syntax on
   silent! color gruvbox
else
   set colorcolumn=0
endif

" Extra fancyness if full pallete is supported.
if &t_Co >= 256 || has("gui_running")
    set cursorline
    set cursorcolumn
endif

set fillchars+=vert:\   " Remove unpleasant pipes from vertical splits
                        " Sauce on this: http://stackoverflow.com/a/9001540

set showmode            " always show which more are we in
set laststatus=2        " always show statusbar
set wildmenu            " enable visual wildmenu
set nowrap              " don't wrap long lines
set number              " show line numbers
set relativenumber      " show numbers as relative by default
set showmatch           " higlight matching parentheses and brackets
"let mapleader=","

set spelllang=es_es
"set thesaurus='~/.vim/thesaurus/es_ES.txt'
let g:tq_language=['es']
let g:tq_openoffice_en_file="/usr/share/myspell/th_en_US_v2"
let g:tq_openoffice_es_file="/usr/share/myspell/th_es_ES_v2"

map <Leader>nt :NERDTreeToggle<CR>
"let NERDTreeQuitOnOpen=0
let NERDTreeWinSize=20

let g:vimtex_view_method = 'zathura'

"let g:ycm_server_python_interpreter = 'python2'
"let g:ycm_path_to_python_interpreter = '/usr/bin/python2'
"let g:ycm_python_binary_path = '/usr/bin/python2'
"let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
"let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
"let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
"let g:ycm_complete_in_comments = 1 " Completion in comments
"let g:ycm_complete_in_strings = 1 " Completion in string
"let g:ycm_auto_trigger = 0

"" Para clases
"set nocuc
"set nornu
"set nonu
"set nuw=2
"set bg=light
"set ls=1
"set sts=2
"set sw=2
"set mouse=a
